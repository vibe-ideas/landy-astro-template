---
import Layout from '../layouts/Layout.astro';
import ContentBlock from '../components/ContentBlock.astro';
import MiddleBlock from '../components/MiddleBlock.astro';

// Import content files
import IntroContent from '../content/IntroContent.json';
import MiddleBlockContent from '../content/MiddleBlockContent.json';
import AboutContent from '../content/AboutContent.json';
import MissionContent from '../content/MissionContent.json';
import ProductContent from '../content/ProductContent.json';
import ContactContent from '../content/ContactContent.json';
import i18nContent from '../content/i18n.json';
---

<Layout title="Landy - React Template to Astro">
	<main>
		<div class="container">
			<!-- Intro Section -->
			<ContentBlock
				direction="right"
				title={IntroContent.title}
				content={IntroContent.text}
				button={IntroContent.button}
				icon="developer.svg"
				id="intro"
			/>

			<!-- Middle Block Section -->
			<MiddleBlock
				title={MiddleBlockContent.title}
				content={MiddleBlockContent.text}
				button={MiddleBlockContent.button}
			/>

			<!-- About Section -->
			<ContentBlock
				direction="left"
				title={AboutContent.title}
				content={AboutContent.text}
				section={AboutContent.section}
				icon="graphs.svg"
				id="about"
			/>

			<!-- Mission Section -->
			<ContentBlock
				direction="right"
				title={MissionContent.title}
				content={MissionContent.text}
				icon="product-launch.svg"
				id="mission"
			/>

			<!-- Product Section -->
			<ContentBlock
				direction="left"
				title={ProductContent.title}
				content={ProductContent.text}
				icon="waving.svg"
				id="product"
			/>

			<!-- Contact Section - Will be implemented as React Island -->
			<section id="contact" class="contact-section">
				<div class="contact-content">
					<h2>{ContactContent.title}</h2>
					<p>{ContactContent.text}</p>
					<div class="contact-placeholder">
						<h3>🚀 Next Phase: Interactive Contact Form</h3>
						<p><strong>Features to implement:</strong></p>
						<ul>
							<li>React Contact Form as Astro Island</li>
							<li>Form validation with React hooks</li>
							<li>Email sending functionality</li>
							<li>Interactive UI components</li>
						</ul>
						<p><em>This will complete the React-to-Astro migration with full interactivity</em></p>
					</div>
				</div>
			</section>
		</div>

		<!-- Language Data Script -->
		<script is:inline>
			// Load i18n content from external file
			window.i18nContent = {
  "en": {
    "intro": {
      "title": "Landing page template for developers & startups",
      "text": "Beautifully designed templates using React.js, ant design and styled-components! Save weeks of time and build your landing page in minutes."
    },
    "middleBlock": {
      "title": "Introduce your product quickly & effectively",
      "text": "Landy comes with multi-lingual support, all components are easy to customize and edit. Landy includes a landing page with a contact form and a blog page with a comment section."
    },
    "about": {
      "title": "Light, fast & responsive",
      "text": "This template is ready to use, so you don't need to change anything at a component level, unless you want to customize the default styling.",
      "section": [
        {
          "title": "Why Antd?",
          "content": "Ant Design is a React UI library that has a lot of easy-to-use components for building elegant UI.",
          "icon": "notes.svg"
        },
        {
          "title": "Why styled-components?",
          "content": "Styled Components gives you total control over your components.",
          "icon": "notes.svg"
        }
      ]
    },
    "mission": {
      "title": "We are driven to make this world",
      "text": "We strive to build working relationships that are based on trust, respect, and cooperation. We are committed to providing the highest level of service and support to our clients."
    },
    "product": {
      "title": "Increase your productivity",
      "text": "A desktop application that helps you manage your tasks, track your time, and stay organized. Available for Windows, macOS, and Linux."
    },
    "contact": {
      "title": "Let's get in touch",
      "text": "We'd love to hear from you. Whether you have a question about features, trials, pricing, need a demo, or anything else, our team is ready to answer all your questions."
    },
    "footer": {
      "contactTitle": "Contact",
      "contactLarge": "Tell us everything",
      "contactText": "Do you have any question? Feel free to reach out.",
      "contactButton": "Let's Chat",
      "addressTitle": "Address",
      "addressLine1": "Rancho Santa Margarita",
      "addressLine2": "2131 Elk Street",
      "addressLine3": "California",
      "policyTitle": "Policy",
      "policyLink1": "Application Security",
      "policyLink2": "Software Principles",
      "companyTitle": "Company",
      "companyLink1": "About",
      "companyLink2": "Blog",
      "companyLink3": "Press",
      "companyLink4": "Careers & Culture",
      "supportTitle": "Support Center",
      "supportLink1": "Customer Support",
      "languageTitle": "Language"
    }
  },
  "es": {
    "intro": {
      "title": "Plantilla de página de aterrizaje para desarrolladores y startups",
      "text": "Plantillas bellamente diseñadas usando React.js, ant design y styled-components! Ahorra semanas de tiempo y construye tu página de aterrizaje en minutos."
    },
    "middleBlock": {
      "title": "Presenta tu producto rápida y efectivamente",
      "text": "Landy viene con soporte multiidioma, todos los componentes son fáciles de personalizar y editar. Landy incluye una página de aterrizaje con un formulario de contacto y una página de blog con una sección de comentarios."
    },
    "about": {
      "title": "Ligero, rápido y responsivo",
      "text": "Esta plantilla está lista para usar, así que no necesitas cambiar nada a nivel de componente, a menos que quieras personalizar el estilo predeterminado.",
      "section": [
        {
          "title": "¿Por qué Antd?",
          "content": "Ant Design es una biblioteca de interfaz de usuario de React que tiene muchos componentes fáciles de usar para construir interfaces elegantes.",
          "icon": "notes.svg"
        },
        {
          "title": "¿Por qué styled-components?",
          "content": "Styled Components te da control total sobre tus componentes.",
          "icon": "notes.svg"
        }
      ]
    },
    "mission": {
      "title": "Estamos motivados para hacer de este mundo",
      "text": "Nos esforzamos por construir relaciones de trabajo basadas en la confianza, el respeto y la cooperación. Estamos comprometidos a proporcionar el más alto nivel de servicio y soporte a nuestros clientes."
    },
    "product": {
      "title": "Aumenta tu productividad",
      "text": "Una aplicación de escritorio que te ayuda a gestionar tus tareas, hacer seguimiento de tu tiempo y mantenerte organizado. Disponible para Windows, macOS y Linux."
    },
    "contact": {
      "title": "Pongámonos en contacto",
      "text": "Nos encantaría saber de ti. Ya sea que tengas una pregunta sobre características, pruebas, precios, necesites una demostración o cualquier otra cosa, nuestro equipo está listo para responder todas tus preguntas."
    },
    "footer": {
      "contactTitle": "Contacto",
      "contactLarge": "Cuéntanos todo",
      "contactText": "¿Tienes alguna pregunta? No dudes en contactarnos.",
      "contactButton": "Hablemos",
      "addressTitle": "Dirección",
      "addressLine1": "Rancho Santa Margarita",
      "addressLine2": "2131 Elk Street",
      "addressLine3": "California",
      "policyTitle": "Política",
      "policyLink1": "Seguridad de Aplicaciones",
      "policyLink2": "Principios de Software",
      "companyTitle": "Empresa",
      "companyLink1": "Acerca de",
      "companyLink2": "Blog",
      "companyLink3": "Prensa",
      "companyLink4": "Carreras y Cultura",
      "supportTitle": "Centro de Soporte",
      "supportLink1": "Soporte al Cliente",
      "languageTitle": "Idioma"
    }
  }
};
			
			// Function to update page content based on language
			function updatePageLanguage(lang) {
				const content = window.i18nContent[lang];
				if (!content) return;
				
				// Update intro section
				const introTitle = document.querySelector('#intro h6');
				const introText = document.querySelector('#intro .content-text');
				if (introTitle) introTitle.textContent = content.intro.title;
				if (introText) introText.textContent = content.intro.text;
				
				// Update middle block section
				const middleTitle = document.querySelector('.middle-block-section h6');
				const middleText = document.querySelector('.middle-block-section .content');
				if (middleTitle) middleTitle.textContent = content.middleBlock.title;
				if (middleText) middleText.textContent = content.middleBlock.text;
				
				// Update about section
				const aboutTitle = document.querySelector('#about h6');
				const aboutText = document.querySelector('#about .content-text');
				if (aboutTitle) aboutTitle.textContent = content.about.title;
				if (aboutText) aboutText.textContent = content.about.text;
				
				// Update mission section
				const missionTitle = document.querySelector('#mission h6');
				const missionText = document.querySelector('#mission .content-text');
				if (missionTitle) missionTitle.textContent = content.mission.title;
				if (missionText) missionText.textContent = content.mission.text;
				
				// Update product section
				const productTitle = document.querySelector('#product h6');
				const productText = document.querySelector('#product .content-text');
				if (productTitle) productTitle.textContent = content.product.title;
				if (productText) productText.textContent = content.product.text;
				
				// Update contact section
				const contactTitle = document.querySelector('#contact h2');
				const contactText = document.querySelector('#contact p');
				if (contactTitle) contactTitle.textContent = content.contact.title;
				if (contactText) contactText.textContent = content.contact.text;
				
				// Update footer content
				const footerContactTitle = document.querySelector('.footer-language');
				const footerContactLarge = document.querySelector('.footer-large');
				const footerContactText = document.querySelector('.footer-column .footer-para');
				const footerContactButton = document.querySelector('.footer-chat');
				const footerAddressTitle = document.querySelector('.address-section .footer-language');
				const footerPolicyTitle = document.querySelector('.footer-column:nth-child(2) .footer-title');
				const footerCompanyTitle = document.querySelector('.company-section .footer-title');
				const footerLanguageTitle = document.querySelector('.footer-label');
				
				if (footerContactTitle) footerContactTitle.textContent = content.footer.contactTitle;
				if (footerContactLarge) footerContactLarge.textContent = content.footer.contactLarge;
				if (footerContactText) footerContactText.textContent = content.footer.contactText;
				if (footerContactButton) footerContactButton.textContent = content.footer.contactButton;
				if (footerAddressTitle) footerAddressTitle.textContent = content.footer.addressTitle;
				if (footerPolicyTitle) footerPolicyTitle.textContent = content.footer.policyTitle;
				if (footerCompanyTitle) footerCompanyTitle.textContent = content.footer.companyTitle;
				if (footerLanguageTitle) footerLanguageTitle.textContent = content.footer.languageTitle;
			}
			
			// Listen for language change events
			window.addEventListener('languageChanged', function(event) {
				updatePageLanguage(event.detail.language);
			});
			
			// Initialize with saved language or default
			const savedLang = localStorage.getItem('selectedLanguage') || 'en';
			updatePageLanguage(savedLang);
		</script>

		<!-- Global Navigation Script -->
		<script is:inline>
			// Global smooth scroll function for navigation
			window.scrollToSection = function(targetId) {
				// Use a longer delay to ensure page is fully loaded
				setTimeout(() => {
					const element = document.getElementById(targetId);
					if (element) {
						const headerHeight = 80;
						const targetPosition = element.offsetTop - headerHeight;
						
						window.scrollTo({
							top: targetPosition,
							behavior: 'smooth'
						});
						console.log(`Global scroll to ${targetId} at position ${targetPosition}`);
					} else {
						console.warn(`Element with id '${targetId}' not found for global scroll`);
					}
				}, 300); // Increased delay for better reliability
			};

			// Initialize navigation - handle both DOMContentLoaded and immediate execution
			function initializeNavigation() {
				// Add click event listeners to all navigation links
				document.querySelectorAll('a[href^="#"]').forEach(link => {
					link.addEventListener('click', function(e) {
						const href = this.getAttribute('href');
						if (href && href.startsWith('#')) {
							const targetId = href.substring(1);
							if (targetId) {
								e.preventDefault();
								window.scrollToSection(targetId);
							}
						}
					});
				});

				// Add click event listeners to all scroll-to links
				document.querySelectorAll('[data-scroll-to]').forEach(link => {
					link.addEventListener('click', function(e) {
						const targetId = this.getAttribute('data-scroll-to');
						if (targetId) {
							e.preventDefault();
							window.scrollToSection(targetId);
						}
					});
				});

				console.log('Navigation system initialized');
			}

			// Try to initialize immediately for better responsiveness
			if (document.readyState === 'loading') {
				document.addEventListener('DOMContentLoaded', initializeNavigation);
			} else {
				// DOM is already loaded or interactive
				initializeNavigation();
			}
		</script>

		<!-- Scroll to Top Button -->
		<button id="scroll-to-top" class="scroll-to-top" aria-label="Scroll to top">
			↑
		</button>
	</main>
</Layout>

<style>
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 1rem;
	}

	.contact-section {
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		padding: 6rem 0;
		text-align: center;
		margin: 4rem 0 0 0;
	}

	.contact-content {
		max-width: 700px;
		margin: 0 auto;
		padding: 0 1rem;
	}

	.contact-content h2 {
		color: white;
		font-size: 2.5rem;
		font-weight: 600;
		margin-bottom: 1.5rem;
		line-height: 1.2;
	}

	.contact-content p {
		color: white;
		font-size: 1rem;
		line-height: 1.6;
		margin-bottom: 2rem;
		opacity: 0.9;
	}

	.contact-placeholder {
		background: rgba(255, 255, 255, 0.95);
		padding: 2.5rem;
		border-radius: 12px;
		box-shadow: 0 8px 30px rgba(0,0,0,0.1);
		margin-top: 2rem;
		text-align: left;
	}

	.contact-placeholder h3 {
		color: #2e186a;
		margin: 0 0 1rem 0;
		font-size: 1.5rem;
		text-align: center;
	}

	.contact-placeholder p {
		margin: 0.5rem 0;
		color: #333;
		opacity: 1;
	}

	.contact-placeholder strong {
		color: #2e186a;
	}

	.contact-placeholder ul {
		margin: 1rem 0;
		padding-left: 1.5rem;
		color: #555;
	}

	.contact-placeholder li {
		margin: 0.5rem 0;
		line-height: 1.4;
	}

	.contact-placeholder em {
		color: #666;
		font-style: italic;
		display: block;
		text-align: center;
		margin-top: 1.5rem;
		padding-top: 1rem;
		border-top: 2px solid #e0e0e0;
	}

	.scroll-to-top {
		position: fixed;
		bottom: 2rem;
		right: 2rem;
		background: #2e186a;
		color: white;
		border: none;
		width: 50px;
		height: 50px;
		border-radius: 50%;
		font-size: 1.5rem;
		cursor: pointer;
		transition: all 0.3s ease;
		opacity: 0;
		visibility: hidden;
		z-index: 1000;
		box-shadow: 0 4px 15px rgba(0,0,0,0.2);
	}

	.scroll-to-top.visible {
		opacity: 1;
		visibility: visible;
	}

	.scroll-to-top:hover {
		background: #ff825c;
		transform: translateY(-2px) scale(1.05);
		box-shadow: 0 6px 20px rgba(0,0,0,0.3);
	}

	@media screen and (max-width: 768px) {
		.contact-content h2 {
			font-size: 2rem;
		}
		
		.contact-placeholder {
			padding: 2rem;
			margin: 1.5rem 1rem 0 1rem;
		}

		.contact-placeholder h3 {
			font-size: 1.3rem;
		}
	}
</style>

<script>
	// Scroll to top functionality
	const scrollToTopBtn = document.getElementById('scroll-to-top');
	
	window.addEventListener('scroll', () => {
		if (window.pageYOffset > 300) {
			scrollToTopBtn?.classList.add('visible');
		} else {
			scrollToTopBtn?.classList.remove('visible');
		}
	});
	
	scrollToTopBtn?.addEventListener('click', () => {
		window.scrollTo({
			top: 0,
			behavior: 'smooth'
		});
	});
</script>
